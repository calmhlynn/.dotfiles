-- local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
-- if not vim.loop.fs_stat(lazypath) then
-- 	vim.fn.system({
-- 		"git",
-- 		"clone",
-- 		"--filter=blob:none",
-- 		"https://github.com/folke/lazy.nvim.git",
-- 		"--branch=stable", -- latest stable release
-- 		lazypath,
-- 	})
-- end
-- vim.opt.rtp:prepend(lazypath)
--
-- return require("lazy").setup({
--
-- 	-- Plugin Manager
-- 	{ "folke/lazy.nvim" },

-- File explorer
-- { "nvim-tree/nvim-tree.lua" },

-- Status line
-- { "nvim-lualine/lualine.nvim", dependencies = "nvim-tree/nvim-web-devicons" },
-- { "akinsho/bufferline.nvim", version = "*", dependencies = "nvim-tree/nvim-web-devicons" },

-- LSP installer
-- { "williamboman/mason.nvim" },
-- { "williamboman/mason-lspconfig.nvim" },

-- {
-- 	"folke/snacks.nvim",
-- 	priority = 1000,
-- 	lazy = false,
-- 	opts = require("settings.snacks").opts,
-- 	keys = require("settings.snacks").keys,
-- },

-- Rust
-- {
-- 	"mrcjkb/rustaceanvim",
-- 	version = "^6",
-- 	lazy = false,
-- },
-- {
-- 	"saecki/crates.nvim",
-- 	tag = "stable",
-- },

-- LSP
-- { "neovim/nvim-lspconfig" },

-- Telescope
-- {
-- 	"nvim-telescope/telescope.nvim",
-- 	tag = "0.1.8",
-- 	dependencies = { "nvim-lua/plenary.nvim" },
-- },
-- {
-- 	"nvim-telescope/telescope-fzf-native.nvim",
-- 	build = "make",
-- 	config = function()
-- 		require("telescope").load_extension("fzf")
-- 	end,
-- 	dependencies = {
-- 		"nvim-telescope/telescope.nvim",
-- 	},
-- },

-- Treesitter
-- { "nvim-treesitter/nvim-treesitter", build = ":TSUpdate" },

-- Completion engine plugins
-- { "hrsh7th/nvim-cmp" },
-- { "L3MON4D3/LuaSnip" },
-- { "saadparwaiz1/cmp_luasnip" },
-- { "hrsh7th/cmp-nvim-lsp" },
-- { "hrsh7th/cmp-path" },
-- { "hrsh7th/cmp-buffer" },
-- { "hrsh7th/cmp-nvim-lsp-signature-help" },

-- Utilities
-- { "akinsho/toggleterm.nvim", version = "*", config = true },
-- { "rcarriga/nvim-notify" },
-- { "rmagatti/auto-session" },
-- { "windwp/nvim-autopairs" },
-- { "folke/trouble.nvim", dependencies = "kyazdani42/nvim-web-devicons" },
-- { "nvim-lua/plenary.nvim" },
-- { "numToStr/Comment.nvim" },
-- { "aznhe21/actions-preview.nvim" },
-- {
-- 	"mfussenegger/nvim-dap",
-- 	config = function()
-- 		require("dapui").setup()
-- 	end,
-- 	dependencies = "rebelot/kanagawa.nvim",
-- },
-- { "rcarriga/nvim-dap-ui", dependencies = { "mfussenegger/nvim-dap", "nvim-neotest/nvim-nio" } },
-- {
-- 	"folke/which-key.nvim",
-- 	event = "VeryLazy",
-- 	keys = {
-- 		{
-- 			"<leader>?",
-- 			function()
-- 				require("which-key").show({ global = false })
-- 			end,
-- 			desc = "Buffer Local Keymaps (which-key)",
-- 		},
-- 	},
-- },
-- {
-- 	"lewis6991/hover.nvim",
-- },

-- { "lukas-reineke/indent-blankline.nvim", main = "ibl", opts = {} },
-- {
-- 	"stevearc/conform.nvim",
-- 	opts = {},
-- },
-- -- { "lewis6991/gitsigns.nvim" },
-- { "NvChad/nvim-colorizer.lua" },

-- ai

-- Markdown
-- {
-- 	"iamcco/markdown-preview.nvim",
-- 	cmd = { "MarkdownPreviewToggle", "MarkdownPreview", "MarkdownPreviewStop" },
-- 	build = "cd app && yarn install",
-- 	init = function()
-- 		vim.g.mkdp_filetypes = { "markdown" }
-- 	end,
-- 	ft = { "markdown" },
-- },
-- {
-- 	"MeanderingProgrammer/render-markdown.nvim",
-- 	opts = {},
-- 	dependencies = { "nvim-treesitter/nvim-treesitter", "nvim-tree/nvim-web-devicons" },
-- },

-- Theme
-- {
-- 	"rebelot/kanagawa.nvim",
-- },
-- })
